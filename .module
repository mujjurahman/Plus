/**
 * @file
 * Provides my custom functionality for my Drupal site.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Database\Database;
use Drupal\Core\Database\SchemaException;
use Drupal\Core\Database\Query\Condition;
use Drupal\Core\Database\Query\Select;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Core\Render\RenderContext;
use Drupal\Core\Render\RendererInterface;
use Drupal\Core\Url;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Drupal\file\Entity\File;

/**
 * Implements hook_form_FORM_ID_alter() for the custom form.
 */
function pfe_med_connect_form_pfe_med_connect_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['#submit'][] = 'pfe_med_connect_form_submit';
}

/**
 * Form submission handler for the custom form.
 */
function pfe_med_connect_form_submit(&$form, FormStateInterface $form_state) {
  $csv_file = $form_state->getValue('csv_file');

  if (!empty($csv_file)) {
    $file = File::load($csv_file->id());

    if ($file) {
      $file_path = $file->getFileUri();

      // Process the CSV file.
      $data = pfe_med_connect_process_csv_file($file_path);

      if (!empty($data)) {
        // Truncate the custom_table before inserting new data.
        pfe_med_connect_truncate_table();

        // Insert the data into the custom_table.
        pfe_med_connect_insert_data($data);

        \Drupal::messenger()->addMessage('CSV data has been processed and stored in the custom_table.');
      } 
      else {
        \Drupal::messenger()->addError('Failed to process the CSV file or no data found.');
      }
    } 
    else {
      \Drupal::messenger()->addError('Failed to load the uploaded file.');
    }
  } 
  else {
    \Drupal::messenger()->addError('No CSV file uploaded.');
  }
}

/**
 * Process the CSV file and return the data as an array.
 */
function pfe_med_connect_process_csv_file($file_path) {
  $data = [];

  if (($handle = fopen($file_path, 'r')) !== FALSE) {
    while (($row = fgetcsv($handle, 1000, ',')) !== FALSE) {
      // Skip the header row.
      if ($row[0] !== 'Produit') {
        $data[] = [
          'Produit' => $row[0],
          'Aire_therapeutique' => $row[1],
          'Departement' => $row[2],
          'RMR_adresse_email' => $row[3],
          'Backup_adresse_email' => $row[4],
        ];
      }
    }

    fclose($handle);
  }

  return $data;
}

/**
 * Implements hook_mail().
 */
function pfe_med_connect_mail($key, &$message, $params) {
  switch ($key) {
    case 'notification':
      $message['subject'] = t('MedConnect: Proposition du corps du message qui sera envoyé au MSL et son backup');

      // You need to replace 'field_key' with the actual field keys from your form.
      $message['body'][] = t('Bonjour,

Vous venez de recevoir une sollicitation de la part d’un professionnel de santé exerçant dans votre région. Merci de vérifier la véracité des informations ci-dessous (nom, prénom, RPPS) et prendre contact avec lui dans les plus bref délais.

Civilité : @civilite
Prénom : @prenom
Nom : @nom
RPPS : @rpps
Hôpital : @hopital
Ville : @ville
Aire thérapeutique : @aire
Produit : @produit
Type de demande : @demande
Message : @message

Cordialement,

La plateforme MedConnect',
        [
          '@civilite' => $params['field_key_civilite'],
          '@prenom' => $params['field_key_prenom'],
          '@nom' => $params['field_key_nom'],
          '@rpps' => $params['field_key_rpps'],
          '@hopital' => $params['field_key_hopital'],
          '@ville' => $params['field_key_ville'],
          '@aire' => $params['field_key_aire'],
          '@produit' => $params['field_key_produit'],
          '@demande' => $params['field_key_demande'],
          '@message' => $params['field_key_message'],
        ]);
      break;
  }
}

/**
 * Insert data into the custom_table.
 */
function pfe_med_connect_insert_data($data) {
  $connection = Database::getConnection();

  foreach ($data as $row) {
    $connection->insert('custom_table')->fields([
      'Produit' => $row['Produit'],
      'Aire_therapeutique' => $row['Aire_therapeutique'],
      'Departement' => $row['Departement'],
      'RMR_adresse_email' => $row['RMR_adresse_email'],
      'Backup_adresse_email' => $row['Backup_adresse_email'],
    ])->execute();
  }
}

/**
 * Truncate the custom_table.
 */
function pfe_med_connect_truncate_table() {
  $connection = Database::getConnection();
  $connection->truncate('custom_table')->execute();
}
