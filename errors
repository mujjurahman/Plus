public function submitForm(array &$form, FormStateInterface $form_state, WebformSubmissionInterface $webform_submission) {
  // Log that the method was called.
  \Drupal::logger('pfe_med_connect')->notice('submitForm called.');

  $values = $webform_submission->getData();
  // DEBUG: Log the form data.
  \Drupal::logger('pfe_med_connect')->notice('Form data: <pre>@data</pre>', ['@data' => print_r($values, TRUE)]);

  // Get the form values.
  $product = $values['nom_du_medicament_ou_produit'];
  $therapeutic_area = $values['aire_therapeutique'];
  $departement = $values['departement'];

  // DEBUG: Log the extracted form values.
  \Drupal::logger('pfe_med_connect')->notice('Extracted form values: Product - ' . $product . ', Therapeutic Area - ' . $therapeutic_area . ', Department - ' . $departement);

  // Query the database.
  $query = \Drupal::database()->select('custom_table', 'ct');

  // Add the condition for the departement.
  $query->condition('ct.Departement', $departement);

  if (!empty($product) && empty($therapeutic_area)) {
    // Scenario 1: The user selects the product and keeps the therapeutics area field empty.
    $query->condition('ct.Produit', $product);
  } elseif (empty($product) && !empty($therapeutic_area)) {
    // Scenario 2: The user selects the therapeutics area and keeps the Product field empty.
    $query->condition('ct.Aire_therapeutique', $therapeutic_area);
    $query->isNull('ct.Produit');
  } else {
    // Scenario 3: The user selects the product and therapeutics area.
    $query->condition('ct.Produit', $product);
    $query->condition('ct.Aire_therapeutique', $therapeutic_area);
  }

  $query->fields('ct', ['RMR_adresse_email', 'Backup_adresse_email']);
  
  // DEBUG: Log the query before executing it.
  \Drupal::logger('pfe_med_connect')->notice('The SQL query: ' . $query->__toString());

  $results = $query->execute()->fetchAll();

  // DEBUG: Log the query results.
  \Drupal::logger('pfe_med_connect')->notice('Query results: <pre>@results</pre>', ['@results' => print_r($results, TRUE)]);

  if (!empty($results)) {
    // Prepare the mail parameters.
    $params = [
      'values' => $values,
    ];

    foreach ($results as $result) {
      // Send a mail to the MSL email.
      $this->mailManager->mail('pfe_med_connect', 'notification', $result->RMR_adresse_email, 'en', $params);

      // Send a mail to the Backup email.
      $this->mailManager->mail('pfe_med_connect', 'notification', $result->Backup_adresse_email, 'en', $params);
    }

    // DEBUG: Log that the emails were sent.
    \Drupal::logger('pfe_med_connect')->notice('Emails sent.');
  } else {
    // DEBUG: Log that no results were found.
    \Drupal::logger('pfe_med_connect')->notice('No results found.');
  }
}
